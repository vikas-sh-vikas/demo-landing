import { notFound } from "next/navigation";
import { NextIntlClientProvider, hasLocale } from "next-intl";
import { Geist, Geist_Mono, Inter } from "next/font/google";
import "../globals.css";

import { ReactNode } from "react";
import { routing } from "@/i18n/routing";
import { Metadata } from "next";
import Header from "@/components/UI/header/header";
import Footer from "@/components/UI/footer/footer";
const inter = Inter({ subsets: ['latin'], variable: '--font-en' });

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Mad3wo App",
  description: "Generated by Vikas Sharma",
  icons:"/mad3wo_logo.svg"
};

type Props = {
  children: ReactNode;
  params: Promise<{ locale: string }>;
};

export default async function LocaleLayout({ children, params }: Props) {
  // Ensure that the incoming `locale` is valid
  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  return (
    <html lang={locale} className={`${inter.variable}`}>
      <head>
        <title>landing-demo</title>
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {" "}
        <NextIntlClientProvider>
          {" "}
          <Header />
          <div>{children}</div>
          <Footer />
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
